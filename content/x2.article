X2. Copy helloworld and worldtime to production
19 Oct 2016
Tags: first

Serge Voilokov

* Introduction

We developed and tested helloworld and worldtime programs locally. To make it available
on internet we need to copy it to our cloud web server.

I created virtual web server [[http://wet.voilokov.com][wet.voilokov.com]] on some cloud provider.
We will deploy our programs to that server so they will be available as

[[http://wet.voilokov.com/helloworld][http://wet.voilokov.com/helloworld]]

and

[[http://wet.voilokov.com/worldtime][http://wet.voilokov.com/worldtime]].

* Adopt code for Apache Web Server

Localy we run our programs using builtin web server to serve content on localhost:8085.
In production we will use Apache Web Server to run our programs.

We should modify the code to use Apache CGI interface instead of starting local server.

So our `main` function

.code x1/helloworld.go /^func main/,/^}/

now uses `local` variable to switch between local and cgi mode.

.code x2/helloworld.go /^var local/,/^}/

Also add `flag` to the import section

	package main

	import (
		"fmt"
		"net/http"
		"net/http/cgi" // add this,
		"log"
		"flag"         // and this !!!
	)

Now build and run it

	go build helloworld.go
	helloworld.exe -local

Note that now we need to specify `-local` parameter to run it locally.

* Building for production

Our local development computer runs Windows but cloud server runs on different hardware and OS.
To recompile the program for running on cloud server run

	GOOS=freebsd GOARCH=amd64 go build helloworld.go

Result of compilation will be `helloworld` file, not `helloworld.exe`.

* Copy to production

I sent to you special `ocean` tool by email. It copies the program to the cloud server and
does nessessary configuration. You only need to run

	ocean -deploy helloworld

Now check [[http://wet.voilokov.com/helloworld][http://wet.voilokov.com/helloworld]].
Browser should show page with this text

	hello world. local = false

If something go wrong run

	ocean -status

It should list remote directory with our `helloworld` program. If not something wend wrong. 

* Copy worldtime to production

Put new code to worldtime.go

	var local = flag.Bool("local", false, "start local server for debugging")

	func main() {
		flag.Parse()

		if *local {
			fmt.Println("=== starting server on http://localhost:8085/ ===")
			http.HandleFunc("/", hello)
			log.Fatal(http.ListenAndServe(":8085", nil))
			return
		}

		err := cgi.Serve(http.HandlerFunc(hello))
		if err != nil {
			panic(err)
		}
	}

Run

	GOOS=freebsd GOARCH=amd64 go build worldtime.go
	ocean -deploy worldtime
	ocean -status

Check [[http://wet.voilokov.com/worldtime][http://wet.voilokov.com/worldtime]]

* Summary

I summarized all above complicated steps into short instruction. That's all you need.

To develop and debug use the cycle

	// edit your code

	// build
	go build worldtime.go

	// run
	worldtime -local

	// check
	// refresh browser on http://localhost:8085/
	
	// stop
	// Ctrl+C to stop server

	// repeat

Deploy to the prod

	// build for the FreeBSD
	GOOS=freebsd GOARCH=amd64 go build worldtime.go

	// deploy
	ocean -deploy helloworld

	// check
	// refresh http://wet.voilokov.com/worldtime








